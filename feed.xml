<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mati Pruvost</title>
    <atom:link href="http://matipruvost.github.io//feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://matipruvost.github.io/</link>
    <description>There are ideas to share · Hay ideas por compartir</description>
    <pubDate>Sun, 08 Nov 2015 21:00:00 -0300</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Generadores Yeoman</title>
      <link>http://matipruvost.github.io//articles/generators/</link>
      <pubDate>Sun, 08 Nov 2015 21:00:00 -0300</pubDate>
      <guid isPermaLink="true">http://matipruvost.github.io//articles/generators/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt; agiliza el inicio de un nuevo proyecto de software utilizando herramientas para facilitar el desempeño y productividad.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;-por-qu-utilizar-generadores-yeoman-&quot;&gt;¿Por qué utilizar generadores Yeoman?&lt;/h1&gt;
&lt;p&gt;El objetivo principal de esta herramienta es construir la estructura del proyecto de software que estamos por iniciar. A este esqueleto se le denomina &lt;code&gt;scaffolding&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;La estructura que proporciona el generador sigue las ideas de patrones de diseño y buenas prácticas propias del lenguaje en el que estamos desarrollando. Por lo tanto, nos aseguramos que el proyecto de software se ubica dentro de una guía establecida y planificada. Es posible no incluir ciertas guías por el simple hecho de no conocerlas, de esta forma nos aseguramos de lo contrario.&lt;/p&gt;
&lt;p&gt;Otro punto importante es agregar nuevas piezas de software al proyecto de manera automática. Posibilita incluir nuevos módulos evitando hacerlo de forma manual.&lt;/p&gt;
&lt;p&gt;Incluir tareas automáticas es otra ventaja. Las tareas pueden ser compilar el proyecto para diferentes ambientes como &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;testing&lt;/code&gt; o &lt;code&gt;production&lt;/code&gt;, ejecutar tests automáticos, crear documentación del proyecto e incluir nuevas librerías. &lt;/p&gt;
&lt;h1 id=&quot;-qu-tipos-de-generadores-yeoman-hay-disponibles-&quot;&gt;¿Qué tipos de generadores Yeoman hay disponibles?&lt;/h1&gt;
&lt;p&gt;La variedad de generadores es bastante amplia, existen aquellos desarrollados oficialmente por el equipo de Yeoman y otros por la comunidad.&lt;/p&gt;
&lt;p&gt;A continuación algunos generadores de ejemplo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DaftMonk/generator-angular-fullstack#readme&quot;&gt;generator-angular-fullstack&lt;/a&gt;: Crear aplicaciones MEAN, incluye MongoDB, Express, AngularJS y Node.  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/diegonetto/generator-ionic#readme&quot;&gt;generator-ionic&lt;/a&gt;: Crear aplicaciones Ionic utilizando AngularJS y Apache Cordova.  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeoman/generator-chrome-extension#readme&quot;&gt;generator-chrome-extension&lt;/a&gt;: Crear extensiones para Chrome.  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeoman/generator-polymer#readme&quot;&gt;generator-polymer&lt;/a&gt;: Crear aplicaciones utilizando la plataforma Polymer.  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeoman/generator-generator#readme&quot;&gt;generator-generator&lt;/a&gt;: Crear generadores Yeoman.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para ver a la lista provista por el proyecto debes acceder a este &lt;a href=&quot;http://yeoman.io/generators/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;requisitos&quot;&gt;Requisitos&lt;/h1&gt;
&lt;p&gt;Los requisitos para instalar Yeoman son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.js.  &lt;/li&gt;
&lt;li&gt;npm.  &lt;/li&gt;
&lt;li&gt;bower.  &lt;/li&gt;
&lt;li&gt;grunt.  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;node-y-npm&quot;&gt;Node y npm&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; es un runtime environment en Javascript, multiplataforma y basado en motor V8 de Chrome. &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Npm&lt;/a&gt; es el gestor de paquetes de Node.js.&lt;/p&gt;
&lt;p&gt;Para instalar Node.js y npm tenés que dirigirte a este &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;link&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;bower&quot;&gt;Bower&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; es un gestor de paquetes optimizado para desarrollo front-end. Para instalar bower tenes que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm install bower -g
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;grunt&quot;&gt;Grunt&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; es un gestor de tareas repetitivas. Para instalar grunt tenes que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm install grunt-cli -g
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;instalaci-n&quot;&gt;Instalación&lt;/h1&gt;
&lt;p&gt;Para instalar yeoman tenes que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm install yo -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego tendrás que instalar el generador específico conveniente para tu idea, en el caso que quisieras empezar un proyecto MEAN, deberás ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm install generator-angular-fullstack -g
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Wintersmith tutoriial</title>
      <link>http://matipruvost.github.io//articles/wintersmith-tutorial/</link>
      <pubDate>Sun, 18 Oct 2015 21:00:00 -0300</pubDate>
      <guid isPermaLink="true">http://matipruvost.github.io//articles/wintersmith-tutorial/</guid>
      <author></author>
      <description>&lt;p&gt;Guía completa para generar un blog utilizando &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt; y &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;github-pages&quot;&gt;GitHub Pages&lt;/h1&gt;
&lt;p&gt;Con GitHub pages es posible crear un website personal rápidamente.
Se necesita:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crear una cuenta en GitHub.  &lt;/li&gt;
&lt;li&gt;Crear el repositorio para tu website.&lt;/li&gt;
&lt;li&gt;Instalar Git.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git es un controlador de versiones, por lo tanto, registra los cambios realizados sobre un archivo a lo largo del tiempo. Es un sistema muy utilizado en el desarrollo de software. &lt;/p&gt;
&lt;p&gt;GitHub es una plataforma de desarrollo para alojar proyectos utilizando Git. &lt;/p&gt;
&lt;p&gt;GitHub Pages es un servicio de GitHub para alojar páginas de una manera muy sencilla. &lt;/p&gt;
&lt;p&gt;Entonces, se utiliza GitHub Pages para poder visualizar el website en la web, GitHub para poder alojar el website y Git para poder realizar todos los cambios posibles en el proyecto.&lt;/p&gt;
&lt;h2 id=&quot;nueva-cuenta-en-github&quot;&gt;Nueva cuenta en GitHub&lt;/h2&gt;
&lt;p&gt;Para crear una nueva cuenta en GitHub tenés que dirigirte a este &lt;a href=&quot;https://github.com/join&quot;&gt;link&lt;/a&gt;. Hay dos tipos de cuentas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Free&lt;/em&gt;: Cantidad de proyectos públicos y colaboradores ilimitados.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Enterprise&lt;/em&gt;: Crear proyectos privados.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esta cuenta te servirá para alojar tu proyecto en un repositorio Git y para acceder al servicio de GitHub Pages.&lt;/p&gt;
&lt;h2 id=&quot;crear-el-repositorio-para-tu-website&quot;&gt;Crear el repositorio para tu website&lt;/h2&gt;
&lt;p&gt;Para crear el repositorio de tu website debes hacer el paso 1 de la guía de este &lt;a href=&quot;https://pages.github.com/&quot;&gt;link&lt;/a&gt;. Los demás pasos los veremos más adelante. Si necesitas una mejor explicación del paso 1, este &lt;a href=&quot;https://help.github.com/articles/create-a-repo/&quot;&gt;link&lt;/a&gt; prevé una guía de 6 pasos más completa.&lt;/p&gt;
&lt;p&gt;Lo importante es que tu repositorio sea nombrado de esta forma &lt;em&gt;username&lt;/em&gt;.github.io, donde &lt;em&gt;username&lt;/em&gt; es el nombre de usuario en GitHub.&lt;/p&gt;
&lt;h2 id=&quot;instalar-git&quot;&gt;Instalar Git&lt;/h2&gt;
&lt;p&gt;Para instalar git tenés que dirigirte a este &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;link&lt;/a&gt;. Deberás elegir entre los diferentes OS disponibles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/linux&quot;&gt;Linux&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/linux&quot;&gt;Solaris&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/mac&quot;&gt;MAC OS X&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;Windows&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En los links anteriores se encuentra la guía necesaria del proceso de instalación de cada OS.&lt;/p&gt;
&lt;h1 id=&quot;wintersmith&quot;&gt;Wintersmith&lt;/h1&gt;
&lt;p&gt;Wintersmith es un generador de sitios estáticos muy flexible. Para instalarlo es necesario:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instalar Node.js&lt;/li&gt;
&lt;li&gt;Instalar npm&lt;/li&gt;
&lt;li&gt;Instalar Wintersmith&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Node.js es una plataforma para desarrollar software, Wintersmith está desarrollado en Node.js y podemos descargar e instalar el proyecto utilizando el gestor de paquetes npm.&lt;/p&gt;
&lt;h2 id=&quot;instalar-node-js-y-npm&quot;&gt;Instalar Node.js y npm&lt;/h2&gt;
&lt;p&gt;Node.js es un runtime environment en Javascript, multiplataforma y basado en motor V8 de Chrome. Npm es el gestor de paquetes de Node.js. &lt;/p&gt;
&lt;p&gt;Para instalar Node.js tenés que dirigirte a este &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;link&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;instalar-wintersmith&quot;&gt;Instalar Wintersmith&lt;/h2&gt;
&lt;p&gt;Para instalar Wintersmith es necesario abrir la consola o terminal y ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ npm install wintersmith -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El comando anterior es muy simple &lt;em&gt;npm&lt;/em&gt; indica que se va a utilizar npm, &lt;em&gt;install&lt;/em&gt; indica que se va a instalar un paquete, &lt;em&gt;wintersmith&lt;/em&gt; indica el nombre del paquete que se va a instalar usando npm y la opción &lt;em&gt;-g&lt;/em&gt; indica que el paquete será instalado en un contexto global y podrá ser accedido desde cualquier directorio.&lt;/p&gt;
&lt;h1 id=&quot;crear-el-website&quot;&gt;Crear el website&lt;/h1&gt;
&lt;p&gt;Para crear nuestro proyecto es necesario ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ wintersmith new &amp;lt;path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Donde &lt;em&gt;wintersmith&lt;/em&gt; indica que se utilizará ese comando, &lt;em&gt;new&lt;/em&gt; indica que será un nuevo proyecto y &lt;em&gt;path&lt;/em&gt; es la ruta al directorio donde el proyecto va a ser generado.&lt;/p&gt;
&lt;p&gt;Para probar tu proyecto debes ejecutar los siguientes comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Donde &lt;em&gt;path&lt;/em&gt; es la ruta a tu proyecto. Luego debes ejecutar el siguiente comando para construir el website:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ wintersmith build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Con el siguiente comando vas a levantar tu website en un servidor local en tu PC:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ wintersmith preview
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora debes abrir el browser que tengas instalado en tu PC y escribir la siguiente url &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo que vas a observar es un website de ejemplo con algunos artículos ya creados y definidos.&lt;/p&gt;
&lt;h1 id=&quot;estructura-del-proyecto&quot;&gt;Estructura del proyecto&lt;/h1&gt;
&lt;p&gt;En el directorio &lt;code&gt;build/&lt;/code&gt; se encuentra el website generado y en &lt;code&gt;contents/articles/&lt;/code&gt; se alojan los artículos que vayas a escribir en tu website.&lt;/p&gt;
&lt;h1 id=&quot;crear-un-art-culo&quot;&gt;Crear un artículo&lt;/h1&gt;
&lt;p&gt;Debes crear un directorio dentro del directorio &lt;code&gt;contents/articles/&lt;/code&gt; con el nombre de tu artículo sin espacios por ejemplo &lt;code&gt;my-first-post/&lt;/code&gt;, por lo tanto vas a obtener la siguiente estructura &lt;code&gt;contents/my-first-post/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dentro del directorio &lt;code&gt;contents/my-first-post/&lt;/code&gt; debes crear un archivo llamado &lt;code&gt;index.md&lt;/code&gt;. En este archivo se escribirá el contenido de tu artículo.&lt;/p&gt;
&lt;p&gt;Lo primero que debes escribir en el archivo &lt;code&gt;index.md&lt;/code&gt; es lo siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-markdown&quot;&gt; ---
 title: My first post
 date: 2015-10-08 12:10
 author: Román Riquelme
 template: article.jade
 ---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;title&lt;/em&gt; es el título de tu artículo, en este caso &lt;em&gt;My first post&lt;/em&gt;. &lt;em&gt;title&lt;/em&gt; es la fecha de publicación de tu artículo, en este caso &lt;em&gt;2015-10-08 12:10&lt;/em&gt;, &lt;em&gt;author&lt;/em&gt; es el autor del artículo, en este caso &lt;em&gt;Román Riquelme&lt;/em&gt; y &lt;em&gt;template&lt;/em&gt; es la plantilla que se ve a utilizar, en este caso &lt;em&gt;article.jade&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A partir de aquí deberás crear el contenido de tu artículo, podrás insertar imágenes, links, crear tablas, listas, utilizar jerarquías de títulos, etc. Para esto Wintersmith utiliza Markdown que es una forma simple de escribir código HTML para web. Para obtener una guía básica de como escribir Markdown tenés que dirigirte a este &lt;a href=&quot;https://help.github.com/articles/markdown-basics/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;publicar-el-website-en-github-pages&quot;&gt;Publicar el website en GitHub Pages&lt;/h1&gt;
&lt;p&gt;En primer lugar deberás abrir tu consola o terminal y dirigirte al directorio &lt;code&gt;build/&lt;/code&gt; de tu proyecto:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;path-to-project&amp;gt;/build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego es necesario inicializar un repositorio git dentro del directorio, debes ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A continuación debes agregar el repositorio remoto que fue creado en GitHub, debes ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ git remote add origin git@github.com:username/username.github.io.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;username&lt;/em&gt; es el nombre de usuario de la cuenta de github.&lt;/p&gt;
&lt;p&gt;En este momento ya tenemos conectados el repositorio local con el repositorio alojado en GitHub. Por lo tanto, los dos comandos anteriores solo son necesarios de ejecutar la primera vez.&lt;/p&gt;
&lt;p&gt;El siguiente paso es agregar nuestros archivos al staging area de Git. Ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ git add --all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A continuación se deberán agregar los archivos que están en staging area al project history. Ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;Comment about changes&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Debes incluir un comentario que indique que cambios vas a introducir al historial de git. El comentario es personal y es importante que sea preciso, de esta amanera nos ayuda a saber que es lo que hicimos.&lt;/p&gt;
&lt;p&gt;Por último debes publicar los cambios en el repositorio remoto en GitHub. Debes ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;$ git push
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora tus cambios están en el repositorio remoto y el website ya está disponible para ser accedido en la web mediante la url de tu website, por ejemplo &lt;a href=&quot;http://username.github.io/&quot;&gt;http://username.github.io/&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;lista-de-pasos-del-tutorial&quot;&gt;Lista de pasos del tutorial&lt;/h1&gt;
&lt;p&gt;A continuación se encuentra la lista de tareas y procedimientos que debes seguir para tener disponible tu website en internet.&lt;/p&gt;
&lt;ul class=&quot;checklist custom-ul&quot;&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Crear una cuenta en GitHub
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Crear un repositorio en GitHub llamado &lt;em&gt;username&lt;/em&gt;.github.io
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Instalar Git en tu PC
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Instalar Node.js y npm en tu PC
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Instalar Wintersmith en tu PC
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Crear tu proyecto utilizando Wintersmith
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Crear un artículo dentro del proyecto
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Crear un repositorio Git dentro del directorio &lt;code&gt;build/&lt;/code&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Agregar el repositorio creado en GitHub al repositorio Git creado en tu PC
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Hacer un commit de los cambios
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Publicar los cambios en el repositorio de GitHub
    &lt;/li&gt;
    &lt;li&gt;
        &lt;input type=&quot;checkbox&quot;&gt; 
        Acceder al website mediante la URL del proyecto
    &lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Porque elegí Wintersmith</title>
      <link>http://matipruvost.github.io//articles/wintersmith/</link>
      <pubDate>Wed, 07 Oct 2015 21:00:00 -0300</pubDate>
      <guid isPermaLink="true">http://matipruvost.github.io//articles/wintersmith/</guid>
      <author></author>
      <description>&lt;p&gt;Implementé este blog utilizando un generador de sitios estáticos llamado &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;, sin embargo ¿Por qué hice esa elección?&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Para empezar hice una lista mental de las características con las que un generador debería contar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Software libre.  &lt;/li&gt;
&lt;li&gt;Multi plataforma. &lt;/li&gt;
&lt;li&gt;Desarrollado en un lenguaje que conozca.   &lt;/li&gt;
&lt;li&gt;Crear contenidos de forma ágil y sencilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Después inicié una búsqueda por internet, lo que conseguí fue una cantidad importante de proyectos que satisfacían perfectamente la lista mental. No iba a ser tan simple elegir entre las posibilidades, filtré las opciones y me quedé con dos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://getnikola.com/&quot;&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una comparación entre ellos es la siguiente:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;item \ generador&lt;/th&gt;
&lt;th&gt;Wintersmith&lt;/th&gt;
&lt;th&gt;Nikola&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Software libre&lt;/td&gt;
&lt;td&gt;MIT license&lt;/td&gt;
&lt;td&gt;MIT license&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multi plataforma&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓ &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Desarrollado en un lenguaje que conozca&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.python.org&quot;&gt;Python&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Crear contenidos de forma ágil y sencilla&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Cada generador me parecía perfecto para lo que necesitaba, hubo solo una ventaja para el lado de Wintersmith, es extremadamente sencillo de implementar y de generar contenido. &lt;/p&gt;
&lt;p&gt;Mi primer objetivo es tener la capacidad de publicar textos simples, sin más que eso, por lo tanto, Wintersmith es mi opción. &lt;/p&gt;
&lt;p&gt;Nikola, por su parte, ofrece capacidades y posibilidades más amplias, supera a Wintersmith. En esta etapa es mucho más de lo que preciso.&lt;/p&gt;
&lt;h2 id=&quot;conclusi-n&quot;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Las alternativas de proyectos de generadores de sitios estáticos son variadas, es importante tener en el claro el propósito personal.&lt;/p&gt;
&lt;p&gt;En cuanto a simpleza en instalación, desarrollo e implementación Wintersmith es una clara posibilidad.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hello world</title>
      <link>http://matipruvost.github.io//articles/hello-world/</link>
      <pubDate>Mon, 05 Oct 2015 21:00:00 -0300</pubDate>
      <guid isPermaLink="true">http://matipruvost.github.io//articles/hello-world/</guid>
      <author></author>
      <description>&lt;p&gt;Toda escalera tiene su primer escalón, cada canción tiene su primer estrofa y cada blog tiene su primer artículo.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Empiezo este humilde proyecto con la idea de compartir ideas y experiencias,  en su mayoría serán relacionadas al software, sin embargo habrá lugar para un poco de música e historias.&lt;/p&gt;
&lt;p&gt;Estuve investigando las posibilidades y herramientas disponibles para mantener un blog, claramente, hay muchas y muy geniales. &lt;/p&gt;
&lt;p&gt;Elegí &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt; como generador de blogs estáticos y &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; para almacenar el contenido. En otro artículo voy a contar sobre esta elección.&lt;/p&gt;
&lt;p&gt;Por ahora vamos a intentar desandar este camino !Ya veremos que pasa! 
Sean bienvenidos y bien llegados.. &lt;/p&gt;
</description>
    </item>
  </channel>
</rss>